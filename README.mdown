Flow Scroll
==================

HUWFlow is a UIScrollView subclass for creating a simple cover flow-esque scroll view. The HUWFlowDelegate protocol can be used to recieve notifications when an image was selected or failed to load. Images are loaded asynchronously in a background queue. The default limit for max concurrent loaders is 2 but this can be changed through the maxConcurrentImageLoaders property.

Gracefully handles frame changes, most commonly caused by an orientation change. Scroll position is maintained and images are re-positioned to make use of / adapt to the new viewport size.

![Screen shot](https://github.com/hugowetterberg/FlowScroll/raw/master/pictures/screen.png "The view in action")
![Screen shot of activity indicator](https://github.com/hugowetterberg/FlowScroll/raw/master/pictures/screen-loading.png "Activity indicator when loading")
![Screen shot of the view in landscape orientation](https://github.com/hugowetterberg/FlowScroll/raw/master/pictures/screen-landscape.png "Landscape orientation")

Sample usage
--------------------

Sample usage from HUWViewController.m where the scrollView property is connected to a HUWFlow scroll view. Adds an image that's supposed to fail, to demonstrate the delegate fallback. And then adds the images specified in our json-file. The two delegate methods at the end should be self explanatory.

    - (void)viewDidLoad
    {
        [super viewDidLoad];

        self.scrollView.flowDelegate = self;
        [self.scrollView addImageWithUrl:[NSURL URLWithString:@"http://example.com/nosuchimage.png"]];

        NSArray *json = [NSJSONSerialization JSONObjectWithData:[NSData dataWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"images" ofType:@"json"]] options:0 error:nil];
        for (NSDictionary *info in json) {
            NSURL *imageUrl = [[NSBundle mainBundle] URLForResource:[info objectForKey:@"name"] withExtension:@"jpg"];
            [self.scrollView addImageWithUrl:imageUrl];
        }
    }

    -(void)flowDidSelectItem:(int)index {
        NSLog(@"Selected image #%d", index);
    }

    -(UIImage *)flowFailedToLoadImage:(int)index withError:(NSError *)error {
        NSLog(@"%@", error);
        return [UIImage imageNamed:@"Elizabeth_Stanton.png"];
    }

Custom loaders with addImageWithLoader:
-------------------------------------------

The addImageWithUrl: method uses addImageWithLoader: internally. The loader block is always executed on a background thread and an activity indicator is shown while loading.

    [self addImageWithLoader:^UIImage *(NSError *__autoreleasing *error) {
        UIImage *image = nil;
        NSData *data = [NSData dataWithContentsOfURL:url options:0 error:error];
        if (!*error) {
            image = [UIImage imageWithData:data];
            if (!image) {
                *error = [NSError errorWithDomain:@"nu.wetterberg.Flow" code:0 userInfo:[NSDictionary dictionaryWithObjectsAndKeys:@"Could not read image", NSLocalizedDescriptionKey, nil]];
            }
        }
        return image;
    }];

License
-------------

HUWFlow is licensed under the ISC license, which is a simplified version of the "Simplified BSD License". Yeah I know, simple, simplified, simplifieder. But it is short and easy to follow and boils down to this: use and modify freely, distribute for a fee or for free, I don't care, make money and be happy. BUT you must attribute me in all copies, that is: in your app and in the copied source code.

Contributions are subject to the terms specified in CONTRIBUTING.txt

### Non attribution license

You can purchase a non-attribution license here: [https://gumroad.com/l/Wsa](https://gumroad.com/l/Wsa). Make sure that you enter a proper email-address as that is the only way a can confirm that you have bought a license. I will then send you a properly PGP signed license which can be verified with [this public key](http://wetterberg.nu/hugo.at.wetterberg.asc). The terms of this non-attribution license are as follows:

    This license permits use and modification of the offered source code for your own commercial or free apps. If you are using this code in a contracting project for a third party this party is also required to purchase a non-attribution license.

    You may not grant this access to third parties without the express written consent of Hugo Wetterberg. Nor shall you resell or rebrand this component to third parties as your own intellectual property.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
